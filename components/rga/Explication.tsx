'use client'

import rules from '@/app/r√®gles/rules'
import {
  encodeSituation,
  getAnsweredQuestions,
  getSituation,
} from '@/components/publicodes/situationUtils'
import useSetSearchParams from '@/components/useSetSearchParams'
import useSyncUrlLocalStorage from '@/utils/useSyncUrlLocalStorage'
import Link from 'next/link'
import { useSearchParams } from 'next/navigation'
import Publicodes, { formatValue } from 'publicodes'
import { useMemo } from 'react'
import { roundToThousands } from '../utils'
import MprCategory from '../MprCategory'
import BtnBackToParcoursChoice from '../BtnBackToParcoursChoice'
import CopyButton from '../CopyButton'
import CalculatorWidget from '../CalculatorWidget'
import Value from '../Value'
import ExplicationsCoproIneligible from './ExplicationIneligible'
import Badge from '@codegouvfr/react-dsfr/Badge'
import Select from '@codegouvfr/react-dsfr/Select'
import Input from '@codegouvfr/react-dsfr/Input'
import Breadcrumb from '@codegouvfr/react-dsfr/Breadcrumb'
import Tag from '@codegouvfr/react-dsfr/Tag'

export default function ExplicationCopropriete() {
  useSyncUrlLocalStorage()
  const rawSearchParams = useSearchParams(),
    searchParams = Object.fromEntries(rawSearchParams.entries())
  const engine = useMemo(() => new Publicodes(rules), [rules])
  const answeredQuestions = [...getAnsweredQuestions(searchParams, rules)]
  const situation = getSituation(searchParams, rules)

  const engineSituation = engine.setSituation(situation)
  const setSearchParams = useSetSearchParams()

  const isEligibile = engineSituation.evaluate(
    'copropri√©t√© . condition √©ligibilit√©',
  ).nodeValue

  let bonusFragile = null
  let bonusSortiePassoire = null

  if (isEligibile) {
    // Si le montant des travaux n'est pas pr√©cis√©, on l'estime
    if (!situation['copropri√©t√© . montant travaux']) {
      situation['copropri√©t√© . montant travaux'] = roundToThousands(
        engine.evaluate('copropri√©t√© . montant travaux').nodeValue,
      )
    }
    const evaluation = engine.setSituation(situation)
    bonusFragile = evaluation.evaluate(
      'copropri√©t√© . pourcentage copropri√©t√© fragile',
    ).nodeValue
    bonusSortiePassoire = evaluation.evaluate(
      'copropri√©t√© . pourcentage sortie passoire',
    ).nodeValue
  }
  const nom = situation['copropri√©t√© . nom'],
    nomContent = nom ? nom + ' ' : null

  const getValue = (dottedName) =>
    formatValue(engineSituation.evaluate(dottedName), { precision: 0 })

  return (
    <>
      <Breadcrumb
        currentPageLabel="L'√©ligibilit√© de la copropri√©t√©"
        homeLinkProps={{
          href: '/',
        }}
        segments={[
          {
            label: 'Simulateur copropri√©t√©',
            linkProps: {
              href: '/copropriete',
            },
          },
        ]}
      />
      <div
        css={`
          display: flex;
          justify-content: space-between;
          align-items: center;
        `}
      >
        <BtnBackToParcoursChoice
          {...{
            setSearchParams,
            situation,
            answeredQuestions: answeredQuestions.slice(0, -1),
          }}
        />
        <CopyButton searchParams={searchParams} />
      </div>
      <header className="fr-mt-5v">
        <Tag>MaPrimeR√©nov‚Äô Copropri√©t√©</Tag>
        <h1>Financer une r√©novation d‚Äôampleur de votre copropri√©t√©</h1>
      </header>
      {isEligibile ? (
        <>
          <p>
            Votre copropri√©t√© {nomContent}est{' '}
            <Badge noIcon severity="success">
              √©ligible
            </Badge>{' '}
            au dispositif <strong>MaPrimeR√©nov' Copropri√©t√©</strong>.
          </p>
        </>
      ) : (
        <>
          <p>
            Votre copropri√©t√©{' '}
            <Badge noIcon severity="error">
              n'est pas √©ligible
            </Badge>{' '}
            au dispositif <strong>MaPrimeR√©nov' Copropri√©t√©</strong>
          </p>
          <ExplicationsCoproIneligible {...{ situation, engine }} />
        </>
      )}
      <>
        {isEligibile ? (
          <>
            <CalculatorWidget titleAs="h2">
              <form id="storybook-form">
                <fieldset
                  className="fr-fieldset fr-grid-row--between"
                  style={{
                    alignItems: 'baseline',
                  }}
                  id="storybook-form-fieldset"
                  aria-labelledby="storybook-form-fieldset-legend storybook-form-fieldset-messages"
                >
                  <div className="fr-fieldset__element fr-fieldset__element--inline">
                    <Input
                      nativeInputProps={{
                        type: 'number',
                        name: 'prix-achat',
                        min: 1,
                        step: 1,
                        onChange: (value) => {
                          value = value === undefined ? 0 : value
                          if (!Number.isInteger(parseInt(value))) return
                          setSearchParams(
                            encodeSituation({
                              'copropri√©t√© . nombre de logements': value + '*',
                            }),
                            'replace',
                            false,
                          )
                        },
                        value: situation['copropri√©t√© . nombre de logements'],
                      }}
                      label="Nombre de logements :"
                    />
                  </div>
                  <div className="fr-fieldset__element fr-fieldset__element--inline">
                    <Select
                      nativeSelectProps={{
                        onChange: (e) =>
                          setSearchParams(
                            encodeSituation({
                              'copropri√©t√© . gain √©nerg√©tique': e + '*',
                            }),
                            'replace',
                            false,
                          ),
                        value: situation[
                          'copropri√©t√© . gain √©nerg√©tique'
                        ].replaceAll('"', "'"),
                      }}
                      label="Gain √©nerg√©tique :"
                    >
                      {rules['copropri√©t√© . gain √©nerg√©tique'][
                        'une possibilit√© parmi'
                      ]['possibilit√©s']
                        .slice(1, 3)
                        .map((i) => (
                          <option
                            key={i}
                            value={
                              rules['copropri√©t√© . gain √©nerg√©tique . ' + i]
                                .valeur
                            }
                          >
                            {
                              rules['copropri√©t√© . gain √©nerg√©tique . ' + i]
                                .titre
                            }
                          </option>
                        ))}
                    </Select>
                  </div>
                  <div className="fr-fieldset__element fr-fieldset__element--inline">
                    <Input
                      label="Votre budget travaux (HT) :"
                      nativeInputProps={{
                        type: 'number',
                        value: situation['copropri√©t√© . montant travaux'],
                        min: '0',
                        max: '999999',
                        step: '100',
                        onChange: (e) => {
                          const value =
                            e.target.value === undefined || e.target.value == ''
                              ? 0
                              : e.target.value
                          if (!Number.isInteger(parseInt(value))) return

                          setSearchParams(
                            encodeSituation({
                              'copropri√©t√© . montant travaux': value + '*',
                            }),
                            'replace',
                            false,
                          )
                        },
                      }}
                      addon={
                        <>
                          ‚Ç¨
                          <span title="Hors taxes, soit hors TVA. En g√©n√©ral, les travaux qui am√©liorent la performance √©nerg√©tique sont tax√©s √† 5,5 % de TVA">
                            HT
                          </span>
                        </>
                      }
                    />
                  </div>
                </fieldset>
              </form>
              <div
                css={`
                  margin: 1rem 0;
                `}
              >
                ü•≥ <strong>Bonne nouvelle</strong> : Vous √™tes √©ligible √† une
                aide de
                <Value
                  {...{
                    engine,
                    situation,
                    dottedName: "copropri√©t√© . pourcentage d'aide",
                  }}
                />
                du co√ªt de vos travaux avec un plafond de
                <Value
                  {...{
                    engine,
                    situation,
                    dottedName:
                      'copropri√©t√© . montant travaux . plafond par logement',
                  }}
                />
                par logement.
                {(bonusSortiePassoire !== 0 || bonusFragile !== 0) &&
                  ' Ce pourcentage inclut '}
                {bonusSortiePassoire !== 0 && (
                  <>
                    <strong>{bonusSortiePassoire}%</strong> de bonus{' '}
                    <em>"Sortie de passoire"</em>
                  </>
                )}
                {bonusFragile !== 0 && (
                  <>
                    {bonusSortiePassoire ? ' et ' : ''}
                    <strong>{bonusFragile}%</strong> de bonus{' '}
                    <em>"Copropri√©t√© fragile ou en difficult√©"</em>
                  </>
                )}
                {(bonusSortiePassoire !== 0 || bonusFragile !== 0) && '.'}
              </div>
              <div
                css={`
                  display: flex;
                  flex-direction: column;
                  justify-content: center;
                  gap: 0.5rem;
                  margin-top: 1rem;
                `}
              >
                <div>
                  Vous toucherez un total d'aides de¬†:{' '}
                  <Value
                    {...{
                      size: 'xl',
                      state: 'success',
                      engine,
                      situation: situation,
                      dottedName: 'copropri√©t√© . montant',
                    }}
                  />
                </div>
              </div>
            </CalculatorWidget>
            <div className="fr-callout">
              <h3>Explications</h3>
              <div className="fr-callout__text">
                L'aide de l'√©tat financera{' '}
                <Value
                  {...{
                    size: 'xl',
                    state: 'success',
                    engine,
                    situation,
                    dottedName: "copropri√©t√© . pourcentage d'aide",
                  }}
                />{' '}
                du montant total de vos travaux. Ce pourcentage se d√©compose de
                la mani√®re suivante:
                <ul>
                  <li>
                    <Value
                      {...{
                        state: 'success',
                        engine,
                        situation,
                        dottedName:
                          'copropri√©t√© . pourcentage gain √©nerg√©tique',
                      }}
                    />{' '}
                    car votre gain √©nerg√©tique est estim√© √†{' '}
                    <strong>
                      {getValue('copropri√©t√© . gain √©nerg√©tique')}
                    </strong>
                  </li>
                  <li>
                    <Value
                      {...{
                        state: bonusSortiePassoire ? 'success' : 'error',
                        engine,
                        situation,
                        dottedName: 'copropri√©t√© . pourcentage sortie passoire',
                      }}
                    />{' '}
                    car{' '}
                    {!bonusSortiePassoire
                      ? 'vous ne b√©n√©ficieriez pas'
                      : 'vous b√©n√©ficieriez'}{' '}
                    du bonus <strong>"Sortie de passoire"</strong>
                  </li>
                  <li>
                    <Value
                      {...{
                        state: bonusFragile ? 'success' : 'error',
                        engine,
                        situation,
                        dottedName:
                          'copropri√©t√© . pourcentage copropri√©t√© fragile',
                      }}
                    />{' '}
                    car{' '}
                    {!bonusFragile
                      ? 'vous ne b√©n√©ficieriez pas'
                      : 'vous b√©n√©ficieriez'}{' '}
                    du bonus{' '}
                    <strong>"Copropri√©t√© fragile ou en difficult√©"</strong>
                  </li>
                </ul>
                <p>
                  Elle est plafonn√©e √†{' '}
                  <strong>
                    {getValue(
                      'copropri√©t√© . montant travaux . plafond par logement',
                    )}
                  </strong>{' '}
                  par logement. Pour votre copropri√©t√© de{' '}
                  <strong>
                    {getValue('copropri√©t√© . nombre de logements')}
                  </strong>{' '}
                  , cela repr√©sente un plafond de{' '}
                  <strong>
                    {getValue('copropri√©t√© . montant travaux . plafond')}
                  </strong>
                  .
                </p>
              </div>
            </div>
            <div className="fr-callout fr-callout--blue-cumulus fr-icon-info-line">
              <span className="fr-callout__title">Ce n'est pas tout!</span>
              <p className="fr-callout__text">
                Les copropri√©taires sont potentiellement √©ligibles √†{' '}
                <Value
                  {...{
                    size: 'xl',
                    state: 'success',
                    engine,
                    situation,
                    dottedName: 'copropri√©t√© . prime individuelle totale',
                  }}
                />{' '}
                d'aide suppl√©mentaire.
              </p>
              <p className="fr-callout__text">
                En effet, chaque copropri√©taire peut b√©n√©ficier individuellement
                d'une prime pouvant s'√©lever √†{' '}
                <Badge noIcon severity="success" className="fr-h3">
                  {rules['copropri√©t√© . prime individuelle']['par d√©faut']}
                </Badge>{' '}
                par logement en fonction de ses revenus.
              </p>
            </div>
            <MprCategory
              {...{
                engine,
                situation,
                setSearchParams,
                answeredQuestions,
              }}
            />
          </>
        ) : (
          <>
            <div className="fr-callout fr-icon-info-line fr-callout--blue-cumulus">
              <h3>Ce n'est pas fini!</h3>
              <p>
                Les copropri√©taires{' '}
                <strong>peuvent √™tre √©ligibles individuellement</strong> √†
                d'autres aides √† la r√©novation.
                <br />
                C'est pourquoi, nous vous invitons √† refaire une simulation pour
                avoir un aper√ßu de l'ensemble de vos aides.
              </p>
            </div>
            <Link
              className="fr-btn fr-icon-arrow-right-line fr-btn--icon-left"
              href="/simulation"
            >
              Simulez l'ensemble de vos aides
            </Link>
          </>
        )}
      </>
    </>
  )
}
